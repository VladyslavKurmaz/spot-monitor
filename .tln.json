{
  "env": {
  },
  "stages":{
    "cleanup":{
      "shell":[
        "docker volume rm $(docker volume ls -qf dangling=true)"
      ]
    },
    "prereq":{
      "shell":[
        "npm install -g @angular/cli",
        "apr-get -y install python-jsonschema python-requests"
      ]
    },
    "up":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker-compose up $1 --scale $LB_STATIC_WEB_NAME=$LB_STATIC_WEB_NUM --scale $LB_SERVICES_API_NAME=$LB_SERVICES_API_NUM"
      ]
    },
    "down":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker-compose stop",
        "docker-compose down --rmi all"
      ]
    }
  },
  "components":[
    {
      "id":"services",
      "components":[
        {
          "id":"camera",
          "stages":{
            "build":{
              "shell":[
                "export $(cat ./../../.env | grep -v ^# | xargs)",
                "docker build -t spot-monitor-camera ."
              ]
            },
            "serve":{
              "shell":[
              ]
            },
            "run":{
              "shell":[
                "export $(cat ./../../.env | grep -v ^# | xargs)",
                "docker run -d --rm -p ${SERVICES_CAMERA_PORT}:${SERVICES_CAMERA_PORT} --name spot-monitor-camera spot-monitor-camera"
              ]
            },
            "stop":{
              "shell":[
                "export $(cat ./../../.env | grep -v ^# | xargs)",
                "docker stop spot-monitor-camera",
                "docker rmi spot-monitor-camera"
              ]
            }
          }
        }
      ]
    },
    {
      "id":"static",
      "components":[
        {
          "id":"dashboard",
          "inherits":["angular"],
          "stages":{
            "prereq":{
              "shell":[
                "npm install"
              ]
            },
            "build":{
              "shell":[
                "export $(cat ./../../.env | grep -v ^# | xargs)",
                "echo \"export const hosts = { cameraHost: 'http://${SERVICES_CAMERA_HOST}:${SERVICES_CAMERA_PORT}' };\" > src/hosts.ts",
                "ng build --prod --env=prod",
                "docker build -t spot-monitor-dashboard ."
              ]
            },
            "serve":{
              "shell":[
                "export $(cat ./../../.env | grep -v ^# | xargs)",
                "ng build",
                "ng serve --host 0.0.0.0 --port 4201"
              ]
            },
            "run":{
              "shell":[
                "export $(cat ./../../.env | grep -v ^# | xargs)",
                "docker run -d --rm -p ${STATIC_DASHBOARD_PORT}:${STATIC_DASHBOARD_PORT} --name spot-monitor-dashboard spot-monitor-dashboard"
              ]
            },
            "stop":{
              "shell":[
                "export $(cat ./../../.env | grep -v ^# | xargs)",
                "docker stop spot-monitor-dashboard",
                "docker rmi spot-monitor-dashboard"
              ]
            }
          }
        }
      ]
    }
  ]
}